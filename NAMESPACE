useDynLib("crlmm", .registration=TRUE)

## this is temporary
## exportPattern("^[^\\.]")

## Biobase
importClassesFrom(Biobase, AnnotatedDataFrame, AssayData, eSet, SnpSet,
		  NChannelSet, MIAME, Versioned, VersionedBiobase,
		  Versions)

importMethodsFrom(Biobase, annotation, "annotation<-",
                  annotatedDataFrameFrom, assayData, "assayData<-",
                  combine, dims, experimentData, "experimentData<-",
                  fData, featureData, "featureData<-", featureNames,
                  fvarMetadata, fvarLabels, pData, "pData<-", phenoData,
                  "phenoData<-", protocolData, "protocolData<-",
                  pubMedIds, rowMedians, sampleNames, snpCall,
                  snpCallProbability,
		  "snpCall<-", "snpCallProbability<-", storageMode,
                  "storageMode<-", updateObject, varLabels)

importFrom(Biobase, assayDataElement, assayDataElementNames,
           assayDataElementReplace, assayDataNew, classVersion,
           validMsg)

## oligoClasses
importClassesFrom(oligoClasses, SnpSuperSet, AlleleSet, CNSet)

importMethodsFrom(oligoClasses, allele, calls, "calls<-", confs,
		  "confs<-", cnConfidence, "cnConfidence<-", isSnp,
		  chromosome, position, CA, "CA<-", CB, "CB<-", A, B,
		  "A<-", "B<-", open, close)

importFrom(oligoClasses, chromosome2integer, celfileDate, list.celfiles,
           copyNumber, initializeBigMatrix, initializeBigVector)

importFrom(graphics, abline, axis, layout, legend, mtext, par, plot,
           polygon, rect, segments, text, points, boxplot)

importFrom(grDevices, grey)

importFrom(affyio, read.celfile.header, read.celfile)

importFrom(preprocessCore, normalize.quantiles.use.target, normalize.quantiles)

importFrom(utils, data, packageDescription, setTxtProgressBar, txtProgressBar)

importFrom(stats, coef, cov, dnorm, kmeans, lm, mad, median, quantile, sd, update)

importFrom(genefilter, rowSds)

importFrom(mvtnorm, dmvnorm)

importFrom(ellipse, ellipse)

importFrom(ff, ffdf)

exportClasses(CNSetLM, ffdf, list)
exportMethods(open, "[", show, lM, copyNumber) ##, totalCopyNumber)
export(crlmm, 
       crlmmCopynumber, 
       crlmmIllumina, 
##       ellipse, 
       genotype, 
       readIdatFiles, 
       snprma,
       snprma2,
       crlmm2,
       genotype2,
       batch,
       crlmmCopynumber2)
##export(initializeParamObject, biasAdjNP2)


exportMethods(totalCopyNumber)